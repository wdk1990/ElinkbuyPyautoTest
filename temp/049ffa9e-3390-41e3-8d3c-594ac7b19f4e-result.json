{"name": "test_customer_list_case", "status": "failed", "statusDetails": {"message": "AssertionError: assert 8508 == 8507\n  +8508\n  -8507", "trace": "self = <test_dir.test_customer.TestCustomer object at 0x000000000492FD30>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"920d925c964bf91c197804ee1c2a11b1\")>, base_url = 'http://newtest.elinkbuy.cn'\n\n    def test_customer_list_case(self, browser, base_url):\n        \"\"\"\n        模拟点击客户列表或我的客户子菜单进入客户列表页：\n        1.点击最后一页最后的序号获取总记录数\n        2.查询当前员工所属客户总数\n        3.验证当前登录员工客户数\n        \"\"\"\n        self.login(browser, base_url)\n        page = CustomerPage(browser)\n        self.close_layer()  # 关闭弹层\n        self.customer_menu()  # 点击客户列表菜单\n        page.window_scroll(None, 1000)\n        sleep(3)\n    \n        page.last_page.click()  # 点击最后一页\n        sleep(3)\n    \n        total_text = int(page.last_sort.text)\n        result = 0\n        db_conn = DB(ip='47.103.83.160', user='root', passwd='c587024e9ec3ea0a', db='ylg')\n        user = self.get_user()\n        sql = \"select count(1) total from `xy_client` WHERE  `staff_id` =\" + str(user['staff_id']) + \" and `clientkind` = 1  and `tradekindid` <> 2  and `closed` = 'F'\"\n        if user['roles_str'] in [87, 91]:\n            sql = \"select count(1) total from `xy_client` WHERE  `staff_id` =\" + str(user['staff_id']) + \" and `clientkind` = 1  and `tradekindid` <> 2  and `closed` = 'F' and `high_quality` = 0\"\n        clients = db_conn.query(sql)\n        if clients:\n            result = clients[0]['total']\n        sleep(3)\n>       assert result == total_text\nE       assert 8508 == 8507\nE         +8508\nE         -8507\n\ntest_dir\\test_customer.py:55: AssertionError"}, "description": "\n        模拟点击客户列表或我的客户子菜单进入客户列表页：\n        1.点击最后一页最后的序号获取总记录数\n        2.查询当前员工所属客户总数\n        3.验证当前登录员工客户数\n        ", "steps": [{"name": "添加失败截图...", "status": "passed", "attachments": [{"name": "失败截图", "source": "7cd7c3b3-cf32-4c6a-b3bd-7f4bd43eac8b-attachment.png", "type": "image/png"}], "start": 1629095450280, "stop": 1629095450466}], "attachments": [{"name": "log", "source": "a0f4c4b3-c974-4dee-ac24-6ae12d90faa5-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "0bf31ab0-3609-4143-a87a-be7cc8dab4ac-attachment.txt", "type": "text/plain"}], "start": 1629095410908, "stop": 1629095449793, "uuid": "da73b0aa-4f4c-4abd-86a8-d9704df4f203", "historyId": "0043fe995204959df5b24b050e10ed48", "testCaseId": "2e306af1da078e8c2c5deef1eb17bb37", "fullName": "test_dir.test_customer.TestCustomer#test_customer_list_case", "labels": [{"name": "parentSuite", "value": "test_dir"}, {"name": "suite", "value": "test_customer"}, {"name": "subSuite", "value": "TestCustomer"}, {"name": "host", "value": "Win7-2019MNTZRK"}, {"name": "thread", "value": "11048-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_dir.test_customer"}]}