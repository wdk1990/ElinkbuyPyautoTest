{
  "uid" : "9a9142607c95d7f1",
  "name" : "test_wait_visit_quality_case",
  "fullName" : "test_dir.test_popup.TestPopup#test_wait_visit_quality_case",
  "historyId" : "47601cc59f6fd45d8d76749b53ace323",
  "time" : {
    "start" : 1629101520173,
    "stop" : 1629101545232,
    "duration" : 25059
  },
  "description" : "\n        模拟业务员待回访优质客户弹窗数据验证\n        1.查询业务员待回访优质客户数据\n        2.点击信息下拉框下待回访优质客户菜单\n        3.验证待回访优质客户数据\n        ",
  "descriptionHtml" : "<pre><code>    模拟业务员待回访优质客户弹窗数据验证\n    1.查询业务员待回访优质客户数据\n    2.点击信息下拉框下待回访优质客户菜单\n    3.验证待回访优质客户数据\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: 弹窗关闭失败!",
  "statusTrace" : "self = <test_dir.test_popup.TestPopup object at 0x0000000004E75580>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7a3929b1ec68d651aa42f94bec2c5d41\")>, base_url = 'http://newtest.elinkbuy.cn'\n\n    def test_wait_visit_quality_case(self, browser, base_url):\n        \"\"\"\n        模拟业务员待回访优质客户弹窗数据验证\n        1.查询业务员待回访优质客户数据\n        2.点击信息下拉框下待回访优质客户菜单\n        3.验证待回访优质客户数据\n        \"\"\"\n        self.login(browser, base_url)\n        wait_visit_quality_total = 0\n        user = self.get_user()\n        if user['roles_str'] not in [87, 97]:\n            db_conn = DB(ip='47.103.83.160', user='root', passwd='c587024e9ec3ea0a', db='ylg')\n            clients = db_conn.query(\"select code,name,client_id,clientid,staff_id from xy_client where clientid> 0  and staff_id='\" + str(user['staff_id']) + \"'and high_quality=1\")\n            if clients:\n                for client in clients:\n                    begin_date = datetime.date.today() - relativedelta(months=+2)\n                    status = db_conn.query(\"select visit_id from xy_visit where client_id=\" + str( client['client_id']) + \" and type='report' and visit_time>'\" + str(begin_date) + \"' limit 1\")\n                    if not status:\n                        wait_visit_quality_total += 1\n        print('待回访优质客户：' + str(wait_visit_quality_total))\n        sleep(2)\n    \n        page = PopupPage(browser)\n>       self.close_layer()  # 关闭弹层\n\ntest_dir\\test_popup.py:137: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_dir.test_popup.TestPopup object at 0x0000000004E75580>\n\n    def close_layer(self):\n        flag = False\n        if len(self.common.layer_divs) > 0:  # 弹出弹窗\n            for layer_shade in self.common.layer_shades:\n                self.common.execute_script('arguments[0].click()', layer_shade)  # 关闭弹窗\n            flag = True\n>       assert flag is True, \"弹窗关闭失败!\"\nE       AssertionError: 弹窗关闭失败!\n\ntest_dir\\base.py:48: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "browser_close",
    "time" : {
      "start" : 1629101040969,
      "stop" : 1629101040969,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "browser",
    "time" : {
      "start" : 1629101039189,
      "stop" : 1629101040969,
      "duration" : 1780
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1629101520172,
      "stop" : 1629101520172,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n        模拟业务员待回访优质客户弹窗数据验证\n        1.查询业务员待回访优质客户数据\n        2.点击信息下拉框下待回访优质客户菜单\n        3.验证待回访优质客户数据\n        ",
    "status" : "failed",
    "statusMessage" : "AssertionError: 弹窗关闭失败!",
    "statusTrace" : "self = <test_dir.test_popup.TestPopup object at 0x0000000004E75580>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7a3929b1ec68d651aa42f94bec2c5d41\")>, base_url = 'http://newtest.elinkbuy.cn'\n\n    def test_wait_visit_quality_case(self, browser, base_url):\n        \"\"\"\n        模拟业务员待回访优质客户弹窗数据验证\n        1.查询业务员待回访优质客户数据\n        2.点击信息下拉框下待回访优质客户菜单\n        3.验证待回访优质客户数据\n        \"\"\"\n        self.login(browser, base_url)\n        wait_visit_quality_total = 0\n        user = self.get_user()\n        if user['roles_str'] not in [87, 97]:\n            db_conn = DB(ip='47.103.83.160', user='root', passwd='c587024e9ec3ea0a', db='ylg')\n            clients = db_conn.query(\"select code,name,client_id,clientid,staff_id from xy_client where clientid> 0  and staff_id='\" + str(user['staff_id']) + \"'and high_quality=1\")\n            if clients:\n                for client in clients:\n                    begin_date = datetime.date.today() - relativedelta(months=+2)\n                    status = db_conn.query(\"select visit_id from xy_visit where client_id=\" + str( client['client_id']) + \" and type='report' and visit_time>'\" + str(begin_date) + \"' limit 1\")\n                    if not status:\n                        wait_visit_quality_total += 1\n        print('待回访优质客户：' + str(wait_visit_quality_total))\n        sleep(2)\n    \n        page = PopupPage(browser)\n>       self.close_layer()  # 关闭弹层\n\ntest_dir\\test_popup.py:137: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_dir.test_popup.TestPopup object at 0x0000000004E75580>\n\n    def close_layer(self):\n        flag = False\n        if len(self.common.layer_divs) > 0:  # 弹出弹窗\n            for layer_shade in self.common.layer_shades:\n                self.common.execute_script('arguments[0].click()', layer_shade)  # 关闭弹窗\n            flag = True\n>       assert flag is True, \"弹窗关闭失败!\"\nE       AssertionError: 弹窗关闭失败!\n\ntest_dir\\base.py:48: AssertionError",
    "steps" : [ {
      "name" : "添加失败截图...",
      "time" : {
        "start" : 1629101545458,
        "stop" : 1629101545651,
        "duration" : 193
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "701ae0c45123aaa6",
        "name" : "失败截图",
        "source" : "701ae0c45123aaa6.png",
        "type" : "image/png",
        "size" : 141574
      } ],
      "parameters" : [ ],
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "a3282b3d95f05cfc",
      "name" : "log",
      "source" : "a3282b3d95f05cfc.txt",
      "type" : "text/plain",
      "size" : 127
    }, {
      "uid" : "3a7ad9c65889e655",
      "name" : "stdout",
      "source" : "3a7ad9c65889e655.txt",
      "type" : "text/plain",
      "size" : 152
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "browser_close::0",
    "time" : {
      "start" : 1629101545654,
      "stop" : 1629101547941,
      "duration" : 2287
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test_dir"
  }, {
    "name" : "suite",
    "value" : "test_popup"
  }, {
    "name" : "subSuite",
    "value" : "TestPopup"
  }, {
    "name" : "host",
    "value" : "Win7-2019MNTZRK"
  }, {
    "name" : "thread",
    "value" : "5568-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_dir.test_popup"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "9a9142607c95d7f1.json",
  "parameterValues" : [ ]
}