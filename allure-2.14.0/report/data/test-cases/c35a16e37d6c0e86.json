{
  "uid" : "c35a16e37d6c0e86",
  "name" : "test_wait_visit_case",
  "fullName" : "test_dir.test_popup.TestPopup#test_wait_visit_case",
  "historyId" : "1d978a18544ed26dc79f18bec5477ca3",
  "time" : {
    "start" : 1626856193862,
    "stop" : 1626856213630,
    "duration" : 19768
  },
  "description" : "\n        模拟业务员待回访数据验证:\n        1.查询业务员待回访数据\n        2.点击信息图标获取信息下拉菜单中的待回访客户数据\n        3.验证待回访数据\n        ",
  "descriptionHtml" : "<pre><code>    模拟业务员待回访数据验证:\n    1.查询业务员待回访数据\n    2.点击信息图标获取信息下拉菜单中的待回访客户数据\n    3.验证待回访数据\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "Exception: ERROR - 47.103.83.160 query failed: (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'by v.client_id desc,v.visit_time desc,v.next_visit_time desc' at line 1\") - select v.visit_id,v.client_id,v.visit_time,v.next_visit_time from `xy_visit` `v`INNER JOIN `xy_client` `c` ON `c`.`client_id`=`v`.`client_id` WHERE v.staff_id=5 and (v.staff_id=c.staff_id or v.staff_id=c.valid_allot_staff)and v.type='report' and v.wait_visit_status=1order by v.client_id desc,v.visit_time desc,v.next_visit_time desc",
  "statusTrace" : "self = <dbConn.DB object at 0x0000000004787040>\nsql = \"select v.visit_id,v.client_id,v.visit_time,v.next_visit_time from `xy_visit` `v`INNER JOIN `xy_client` `c` ON `c`.`cl..._staff)and v.type='report' and v.wait_visit_status=1order by v.client_id desc,v.visit_time desc,v.next_visit_time desc\"\n\n    def query(self, sql):\n        \"\"\"\n        :param sql: 查询语句\n        :return: result-查询结果;\n        \"\"\"\n        cursor = self._conn.cursor(pymysql.cursors.DictCursor)\n        try:\n            result = []\n>           rows = cursor.execute(sql)\n\ndbConn.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pymysql.cursors.DictCursor object at 0x00000000047870D0>\nquery = \"select v.visit_id,v.client_id,v.visit_time,v.next_visit_time from `xy_visit` `v`INNER JOIN `xy_client` `c` ON `c`.`cl..._staff)and v.type='report' and v.wait_visit_status=1order by v.client_id desc,v.visit_time desc,v.next_visit_time desc\", args = None\n\n    def execute(self, query, args=None):\n        \"\"\"Execute a query\n    \n        :param str query: Query to execute.\n    \n        :param args: parameters used with query. (optional)\n        :type args: tuple, list or dict\n    \n        :return: Number of affected rows\n        :rtype: int\n    \n        If args is a list or tuple, %s can be used as a placeholder in the query.\n        If args is a dict, %(name)s can be used as a placeholder in the query.\n        \"\"\"\n        while self.nextset():\n            pass\n    \n        query = self.mogrify(query, args)\n    \n>       result = self._query(query)\n\nC:\\Program Files\\Python38\\lib\\site-packages\\pymysql\\cursors.py:148: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pymysql.cursors.DictCursor object at 0x00000000047870D0>\nq = \"select v.visit_id,v.client_id,v.visit_time,v.next_visit_time from `xy_visit` `v`INNER JOIN `xy_client` `c` ON `c`.`cl..._staff)and v.type='report' and v.wait_visit_status=1order by v.client_id desc,v.visit_time desc,v.next_visit_time desc\"\n\n    def _query(self, q):\n        conn = self._get_db()\n        self._last_executed = q\n        self._clear_result()\n>       conn.query(q)\n\nC:\\Program Files\\Python38\\lib\\site-packages\\pymysql\\cursors.py:310: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pymysql.connections.Connection object at 0x0000000003CBF0D0>\nsql = b\"select v.visit_id,v.client_id,v.visit_time,v.next_visit_time from `xy_visit` `v`INNER JOIN `xy_client` `c` ON `c`.`c..._staff)and v.type='report' and v.wait_visit_status=1order by v.client_id desc,v.visit_time desc,v.next_visit_time desc\"\nunbuffered = False\n\n    def query(self, sql, unbuffered=False):\n        # if DEBUG:\n        #     print(\"DEBUG: sending query:\", sql)\n        if isinstance(sql, str):\n            sql = sql.encode(self.encoding, \"surrogateescape\")\n        self._execute_command(COMMAND.COM_QUERY, sql)\n>       self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n\nC:\\Program Files\\Python38\\lib\\site-packages\\pymysql\\connections.py:548: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pymysql.connections.Connection object at 0x0000000003CBF0D0>, unbuffered = False\n\n    def _read_query_result(self, unbuffered=False):\n        self._result = None\n        if unbuffered:\n            try:\n                result = MySQLResult(self)\n                result.init_unbuffered_query()\n            except:\n                result.unbuffered_active = False\n                result.connection = None\n                raise\n        else:\n            result = MySQLResult(self)\n>           result.read()\n\nC:\\Program Files\\Python38\\lib\\site-packages\\pymysql\\connections.py:775: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pymysql.connections.MySQLResult object at 0x0000000003CBF250>\n\n    def read(self):\n        try:\n>           first_packet = self.connection._read_packet()\n\nC:\\Program Files\\Python38\\lib\\site-packages\\pymysql\\connections.py:1156: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pymysql.connections.Connection object at 0x0000000003CBF0D0>, packet_type = <class 'pymysql.protocol.MysqlPacket'>\n\n    def _read_packet(self, packet_type=MysqlPacket):\n        \"\"\"Read an entire \"mysql packet\" in its entirety from the network\n        and return a MysqlPacket type that represents the results.\n    \n        :raise OperationalError: If the connection to the MySQL server is lost.\n        :raise InternalError: If the packet sequence number is wrong.\n        \"\"\"\n        buff = bytearray()\n        while True:\n            packet_header = self._read_bytes(4)\n            # if DEBUG: dump_packet(packet_header)\n    \n            btrl, btrh, packet_number = struct.unpack(\"<HBB\", packet_header)\n            bytes_to_read = btrl + (btrh << 16)\n            if packet_number != self._next_seq_id:\n                self._force_close()\n                if packet_number == 0:\n                    # MariaDB sends error packet with seqno==0 when shutdown\n                    raise err.OperationalError(\n                        CR.CR_SERVER_LOST,\n                        \"Lost connection to MySQL server during query\",\n                    )\n                raise err.InternalError(\n                    \"Packet sequence number wrong - got %d expected %d\"\n                    % (packet_number, self._next_seq_id)\n                )\n            self._next_seq_id = (self._next_seq_id + 1) % 256\n    \n            recv_data = self._read_bytes(bytes_to_read)\n            if DEBUG:\n                dump_packet(recv_data)\n            buff += recv_data\n            # https://dev.mysql.com/doc/internals/en/sending-more-than-16mbyte.html\n            if bytes_to_read == 0xFFFFFF:\n                continue\n            if bytes_to_read < MAX_PACKET_LEN:\n                break\n    \n        packet = packet_type(bytes(buff), self.encoding)\n        if packet.is_error_packet():\n            if self._result is not None and self._result.unbuffered_active is True:\n                self._result.unbuffered_active = False\n>           packet.raise_for_error()\n\nC:\\Program Files\\Python38\\lib\\site-packages\\pymysql\\connections.py:725: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pymysql.protocol.MysqlPacket object at 0x00000000047C1C10>\n\n    def raise_for_error(self):\n        self.rewind()\n        self.advance(1)  # field_count == error (we already know that)\n        errno = self.read_uint16()\n        if DEBUG:\n            print(\"errno =\", errno)\n>       err.raise_mysql_exception(self._data)\n\nC:\\Program Files\\Python38\\lib\\site-packages\\pymysql\\protocol.py:221: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata = b\"\\xff(\\x04#42000You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'by v.client_id desc,v.visit_time desc,v.next_visit_time desc' at line 1\"\n\n    def raise_mysql_exception(data):\n        errno = struct.unpack(\"<h\", data[1:3])[0]\n        errval = data[9:].decode(\"utf-8\", \"replace\")\n        errorclass = error_map.get(errno)\n        if errorclass is None:\n            errorclass = InternalError if errno < 1000 else OperationalError\n>       raise errorclass(errno, errval)\nE       pymysql.err.ProgrammingError: (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'by v.client_id desc,v.visit_time desc,v.next_visit_time desc' at line 1\")\n\nC:\\Program Files\\Python38\\lib\\site-packages\\pymysql\\err.py:143: ProgrammingError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_dir.test_popup.TestPopup object at 0x00000000046CE040>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1814dd8db995d097e9e1697a1594c31d\")>, base_url = 'http://newtest.elinkbuy.cn'\n\n    def test_wait_visit_case(self, browser, base_url):\n        \"\"\"\n        模拟业务员待回访数据验证:\n        1.查询业务员待回访数据\n        2.点击信息图标获取信息下拉菜单中的待回访客户数据\n        3.验证待回访数据\n        \"\"\"\n        self.login(browser, base_url)\n>       total = self.get_wait_visit_total(1, 5)\n\ntest_dir\\test_popup.py:65: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_dir\\test_popup.py:80: in get_wait_visit_total\n    visits = db_conn.query(sql)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <dbConn.DB object at 0x0000000004787040>\nsql = \"select v.visit_id,v.client_id,v.visit_time,v.next_visit_time from `xy_visit` `v`INNER JOIN `xy_client` `c` ON `c`.`cl..._staff)and v.type='report' and v.wait_visit_status=1order by v.client_id desc,v.visit_time desc,v.next_visit_time desc\"\n\n    def query(self, sql):\n        \"\"\"\n        :param sql: 查询语句\n        :return: result-查询结果;\n        \"\"\"\n        cursor = self._conn.cursor(pymysql.cursors.DictCursor)\n        try:\n            result = []\n            rows = cursor.execute(sql)\n            if rows > 0:\n                sql_result = cursor.fetchall()\n                # result = [list(i) for i in sql_result]\n                result = sql_result\n            cursor.close()\n            return result\n        except Exception as err:\n            format_err = f\"ERROR - {self._ip} query failed: {err} - {sql}\" + \"\\n\"\n>           raise Exception(format_err)\nE           Exception: ERROR - 47.103.83.160 query failed: (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'by v.client_id desc,v.visit_time desc,v.next_visit_time desc' at line 1\") - select v.visit_id,v.client_id,v.visit_time,v.next_visit_time from `xy_visit` `v`INNER JOIN `xy_client` `c` ON `c`.`client_id`=`v`.`client_id` WHERE v.staff_id=5 and (v.staff_id=c.staff_id or v.staff_id=c.valid_allot_staff)and v.type='report' and v.wait_visit_status=1order by v.client_id desc,v.visit_time desc,v.next_visit_time desc\n\ndbConn.py:60: Exception",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "base_url",
    "time" : {
      "start" : 1626856193830,
      "stop" : 1626856193830,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "browser",
    "time" : {
      "start" : 1626856191156,
      "stop" : 1626856193829,
      "duration" : 2673
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "browser_close",
    "time" : {
      "start" : 1626856193830,
      "stop" : 1626856193830,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "\n        模拟业务员待回访数据验证:\n        1.查询业务员待回访数据\n        2.点击信息图标获取信息下拉菜单中的待回访客户数据\n        3.验证待回访数据\n        ",
    "status" : "broken",
    "statusMessage" : "Exception: ERROR - 47.103.83.160 query failed: (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'by v.client_id desc,v.visit_time desc,v.next_visit_time desc' at line 1\") - select v.visit_id,v.client_id,v.visit_time,v.next_visit_time from `xy_visit` `v`INNER JOIN `xy_client` `c` ON `c`.`client_id`=`v`.`client_id` WHERE v.staff_id=5 and (v.staff_id=c.staff_id or v.staff_id=c.valid_allot_staff)and v.type='report' and v.wait_visit_status=1order by v.client_id desc,v.visit_time desc,v.next_visit_time desc",
    "statusTrace" : "self = <dbConn.DB object at 0x0000000004787040>\nsql = \"select v.visit_id,v.client_id,v.visit_time,v.next_visit_time from `xy_visit` `v`INNER JOIN `xy_client` `c` ON `c`.`cl..._staff)and v.type='report' and v.wait_visit_status=1order by v.client_id desc,v.visit_time desc,v.next_visit_time desc\"\n\n    def query(self, sql):\n        \"\"\"\n        :param sql: 查询语句\n        :return: result-查询结果;\n        \"\"\"\n        cursor = self._conn.cursor(pymysql.cursors.DictCursor)\n        try:\n            result = []\n>           rows = cursor.execute(sql)\n\ndbConn.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pymysql.cursors.DictCursor object at 0x00000000047870D0>\nquery = \"select v.visit_id,v.client_id,v.visit_time,v.next_visit_time from `xy_visit` `v`INNER JOIN `xy_client` `c` ON `c`.`cl..._staff)and v.type='report' and v.wait_visit_status=1order by v.client_id desc,v.visit_time desc,v.next_visit_time desc\", args = None\n\n    def execute(self, query, args=None):\n        \"\"\"Execute a query\n    \n        :param str query: Query to execute.\n    \n        :param args: parameters used with query. (optional)\n        :type args: tuple, list or dict\n    \n        :return: Number of affected rows\n        :rtype: int\n    \n        If args is a list or tuple, %s can be used as a placeholder in the query.\n        If args is a dict, %(name)s can be used as a placeholder in the query.\n        \"\"\"\n        while self.nextset():\n            pass\n    \n        query = self.mogrify(query, args)\n    \n>       result = self._query(query)\n\nC:\\Program Files\\Python38\\lib\\site-packages\\pymysql\\cursors.py:148: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pymysql.cursors.DictCursor object at 0x00000000047870D0>\nq = \"select v.visit_id,v.client_id,v.visit_time,v.next_visit_time from `xy_visit` `v`INNER JOIN `xy_client` `c` ON `c`.`cl..._staff)and v.type='report' and v.wait_visit_status=1order by v.client_id desc,v.visit_time desc,v.next_visit_time desc\"\n\n    def _query(self, q):\n        conn = self._get_db()\n        self._last_executed = q\n        self._clear_result()\n>       conn.query(q)\n\nC:\\Program Files\\Python38\\lib\\site-packages\\pymysql\\cursors.py:310: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pymysql.connections.Connection object at 0x0000000003CBF0D0>\nsql = b\"select v.visit_id,v.client_id,v.visit_time,v.next_visit_time from `xy_visit` `v`INNER JOIN `xy_client` `c` ON `c`.`c..._staff)and v.type='report' and v.wait_visit_status=1order by v.client_id desc,v.visit_time desc,v.next_visit_time desc\"\nunbuffered = False\n\n    def query(self, sql, unbuffered=False):\n        # if DEBUG:\n        #     print(\"DEBUG: sending query:\", sql)\n        if isinstance(sql, str):\n            sql = sql.encode(self.encoding, \"surrogateescape\")\n        self._execute_command(COMMAND.COM_QUERY, sql)\n>       self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n\nC:\\Program Files\\Python38\\lib\\site-packages\\pymysql\\connections.py:548: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pymysql.connections.Connection object at 0x0000000003CBF0D0>, unbuffered = False\n\n    def _read_query_result(self, unbuffered=False):\n        self._result = None\n        if unbuffered:\n            try:\n                result = MySQLResult(self)\n                result.init_unbuffered_query()\n            except:\n                result.unbuffered_active = False\n                result.connection = None\n                raise\n        else:\n            result = MySQLResult(self)\n>           result.read()\n\nC:\\Program Files\\Python38\\lib\\site-packages\\pymysql\\connections.py:775: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pymysql.connections.MySQLResult object at 0x0000000003CBF250>\n\n    def read(self):\n        try:\n>           first_packet = self.connection._read_packet()\n\nC:\\Program Files\\Python38\\lib\\site-packages\\pymysql\\connections.py:1156: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pymysql.connections.Connection object at 0x0000000003CBF0D0>, packet_type = <class 'pymysql.protocol.MysqlPacket'>\n\n    def _read_packet(self, packet_type=MysqlPacket):\n        \"\"\"Read an entire \"mysql packet\" in its entirety from the network\n        and return a MysqlPacket type that represents the results.\n    \n        :raise OperationalError: If the connection to the MySQL server is lost.\n        :raise InternalError: If the packet sequence number is wrong.\n        \"\"\"\n        buff = bytearray()\n        while True:\n            packet_header = self._read_bytes(4)\n            # if DEBUG: dump_packet(packet_header)\n    \n            btrl, btrh, packet_number = struct.unpack(\"<HBB\", packet_header)\n            bytes_to_read = btrl + (btrh << 16)\n            if packet_number != self._next_seq_id:\n                self._force_close()\n                if packet_number == 0:\n                    # MariaDB sends error packet with seqno==0 when shutdown\n                    raise err.OperationalError(\n                        CR.CR_SERVER_LOST,\n                        \"Lost connection to MySQL server during query\",\n                    )\n                raise err.InternalError(\n                    \"Packet sequence number wrong - got %d expected %d\"\n                    % (packet_number, self._next_seq_id)\n                )\n            self._next_seq_id = (self._next_seq_id + 1) % 256\n    \n            recv_data = self._read_bytes(bytes_to_read)\n            if DEBUG:\n                dump_packet(recv_data)\n            buff += recv_data\n            # https://dev.mysql.com/doc/internals/en/sending-more-than-16mbyte.html\n            if bytes_to_read == 0xFFFFFF:\n                continue\n            if bytes_to_read < MAX_PACKET_LEN:\n                break\n    \n        packet = packet_type(bytes(buff), self.encoding)\n        if packet.is_error_packet():\n            if self._result is not None and self._result.unbuffered_active is True:\n                self._result.unbuffered_active = False\n>           packet.raise_for_error()\n\nC:\\Program Files\\Python38\\lib\\site-packages\\pymysql\\connections.py:725: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pymysql.protocol.MysqlPacket object at 0x00000000047C1C10>\n\n    def raise_for_error(self):\n        self.rewind()\n        self.advance(1)  # field_count == error (we already know that)\n        errno = self.read_uint16()\n        if DEBUG:\n            print(\"errno =\", errno)\n>       err.raise_mysql_exception(self._data)\n\nC:\\Program Files\\Python38\\lib\\site-packages\\pymysql\\protocol.py:221: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata = b\"\\xff(\\x04#42000You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'by v.client_id desc,v.visit_time desc,v.next_visit_time desc' at line 1\"\n\n    def raise_mysql_exception(data):\n        errno = struct.unpack(\"<h\", data[1:3])[0]\n        errval = data[9:].decode(\"utf-8\", \"replace\")\n        errorclass = error_map.get(errno)\n        if errorclass is None:\n            errorclass = InternalError if errno < 1000 else OperationalError\n>       raise errorclass(errno, errval)\nE       pymysql.err.ProgrammingError: (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'by v.client_id desc,v.visit_time desc,v.next_visit_time desc' at line 1\")\n\nC:\\Program Files\\Python38\\lib\\site-packages\\pymysql\\err.py:143: ProgrammingError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_dir.test_popup.TestPopup object at 0x00000000046CE040>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1814dd8db995d097e9e1697a1594c31d\")>, base_url = 'http://newtest.elinkbuy.cn'\n\n    def test_wait_visit_case(self, browser, base_url):\n        \"\"\"\n        模拟业务员待回访数据验证:\n        1.查询业务员待回访数据\n        2.点击信息图标获取信息下拉菜单中的待回访客户数据\n        3.验证待回访数据\n        \"\"\"\n        self.login(browser, base_url)\n>       total = self.get_wait_visit_total(1, 5)\n\ntest_dir\\test_popup.py:65: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_dir\\test_popup.py:80: in get_wait_visit_total\n    visits = db_conn.query(sql)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <dbConn.DB object at 0x0000000004787040>\nsql = \"select v.visit_id,v.client_id,v.visit_time,v.next_visit_time from `xy_visit` `v`INNER JOIN `xy_client` `c` ON `c`.`cl..._staff)and v.type='report' and v.wait_visit_status=1order by v.client_id desc,v.visit_time desc,v.next_visit_time desc\"\n\n    def query(self, sql):\n        \"\"\"\n        :param sql: 查询语句\n        :return: result-查询结果;\n        \"\"\"\n        cursor = self._conn.cursor(pymysql.cursors.DictCursor)\n        try:\n            result = []\n            rows = cursor.execute(sql)\n            if rows > 0:\n                sql_result = cursor.fetchall()\n                # result = [list(i) for i in sql_result]\n                result = sql_result\n            cursor.close()\n            return result\n        except Exception as err:\n            format_err = f\"ERROR - {self._ip} query failed: {err} - {sql}\" + \"\\n\"\n>           raise Exception(format_err)\nE           Exception: ERROR - 47.103.83.160 query failed: (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'by v.client_id desc,v.visit_time desc,v.next_visit_time desc' at line 1\") - select v.visit_id,v.client_id,v.visit_time,v.next_visit_time from `xy_visit` `v`INNER JOIN `xy_client` `c` ON `c`.`client_id`=`v`.`client_id` WHERE v.staff_id=5 and (v.staff_id=c.staff_id or v.staff_id=c.valid_allot_staff)and v.type='report' and v.wait_visit_status=1order by v.client_id desc,v.visit_time desc,v.next_visit_time desc\n\ndbConn.py:60: Exception",
    "steps" : [ {
      "name" : "添加失败截图...",
      "time" : {
        "start" : 1626856214288,
        "stop" : 1626856214544,
        "duration" : 256
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "83f75557edb4e673",
        "name" : "失败截图",
        "source" : "83f75557edb4e673.png",
        "type" : "image/png",
        "size" : 83993
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ {
      "uid" : "8e9427a0841d729e",
      "name" : "log",
      "source" : "8e9427a0841d729e.txt",
      "type" : "text/plain",
      "size" : 555
    }, {
      "uid" : "7d27c83a9d4422ad",
      "name" : "stdout",
      "source" : "7d27c83a9d4422ad.txt",
      "type" : "text/plain",
      "size" : 482
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "hasContent" : true,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "browser_close::0",
    "time" : {
      "start" : 1626856214549,
      "stop" : 1626856216682,
      "duration" : 2133
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test_dir"
  }, {
    "name" : "suite",
    "value" : "test_popup"
  }, {
    "name" : "subSuite",
    "value" : "TestPopup"
  }, {
    "name" : "host",
    "value" : "Win7-2019MNTZRK"
  }, {
    "name" : "thread",
    "value" : "12568-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_dir.test_popup"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "c35a16e37d6c0e86.json",
  "parameterValues" : [ ]
}